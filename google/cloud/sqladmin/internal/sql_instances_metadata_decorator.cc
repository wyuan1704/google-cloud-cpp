// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/sql/v1/cloud_sql_instances.proto

#include "google/cloud/sqladmin/internal/sql_instances_metadata_decorator.h"
#include "google/cloud/common_options.h"
#include "google/cloud/internal/api_client_header.h"
#include "google/cloud/status_or.h"
#include <google/cloud/sql/v1/cloud_sql_instances.grpc.pb.h>
#include <memory>

namespace google {
namespace cloud {
namespace sqladmin_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

SqlInstancesServiceMetadata::SqlInstancesServiceMetadata(
    std::shared_ptr<SqlInstancesServiceStub> child)
    : child_(std::move(child)),
      api_client_header_(
          google::cloud::internal::ApiClientHeader("generator")) {}

StatusOr<google::cloud::sql::v1::Operation>
SqlInstancesServiceMetadata::AddServerCa(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesAddServerCaRequest const& request) {
  SetMetadata(context, {});
  return child_->AddServerCa(context, request);
}

StatusOr<google::cloud::sql::v1::Operation> SqlInstancesServiceMetadata::Clone(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesCloneRequest const& request) {
  SetMetadata(context, {});
  return child_->Clone(context, request);
}

StatusOr<google::cloud::sql::v1::Operation> SqlInstancesServiceMetadata::Delete(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesDeleteRequest const& request) {
  SetMetadata(context, {});
  return child_->Delete(context, request);
}

StatusOr<google::cloud::sql::v1::Operation>
SqlInstancesServiceMetadata::DemoteMaster(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesDemoteMasterRequest const& request) {
  SetMetadata(context, {});
  return child_->DemoteMaster(context, request);
}

StatusOr<google::cloud::sql::v1::Operation> SqlInstancesServiceMetadata::Export(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesExportRequest const& request) {
  SetMetadata(context, {});
  return child_->Export(context, request);
}

StatusOr<google::cloud::sql::v1::Operation>
SqlInstancesServiceMetadata::Failover(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesFailoverRequest const& request) {
  SetMetadata(context, {});
  return child_->Failover(context, request);
}

StatusOr<google::cloud::sql::v1::DatabaseInstance>
SqlInstancesServiceMetadata::Get(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesGetRequest const& request) {
  SetMetadata(context, {});
  return child_->Get(context, request);
}

StatusOr<google::cloud::sql::v1::Operation> SqlInstancesServiceMetadata::Import(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesImportRequest const& request) {
  SetMetadata(context, {});
  return child_->Import(context, request);
}

StatusOr<google::cloud::sql::v1::Operation> SqlInstancesServiceMetadata::Insert(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesInsertRequest const& request) {
  SetMetadata(context, {});
  return child_->Insert(context, request);
}

StatusOr<google::cloud::sql::v1::InstancesListResponse>
SqlInstancesServiceMetadata::List(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesListRequest const& request) {
  SetMetadata(context, {});
  return child_->List(context, request);
}

StatusOr<google::cloud::sql::v1::InstancesListServerCasResponse>
SqlInstancesServiceMetadata::ListServerCas(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesListServerCasRequest const& request) {
  SetMetadata(context, {});
  return child_->ListServerCas(context, request);
}

StatusOr<google::cloud::sql::v1::Operation> SqlInstancesServiceMetadata::Patch(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesPatchRequest const& request) {
  SetMetadata(context, {});
  return child_->Patch(context, request);
}

StatusOr<google::cloud::sql::v1::Operation>
SqlInstancesServiceMetadata::PromoteReplica(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesPromoteReplicaRequest const& request) {
  SetMetadata(context, {});
  return child_->PromoteReplica(context, request);
}

StatusOr<google::cloud::sql::v1::Operation>
SqlInstancesServiceMetadata::ResetSslConfig(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesResetSslConfigRequest const& request) {
  SetMetadata(context, {});
  return child_->ResetSslConfig(context, request);
}

StatusOr<google::cloud::sql::v1::Operation>
SqlInstancesServiceMetadata::Restart(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesRestartRequest const& request) {
  SetMetadata(context, {});
  return child_->Restart(context, request);
}

StatusOr<google::cloud::sql::v1::Operation>
SqlInstancesServiceMetadata::RestoreBackup(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesRestoreBackupRequest const& request) {
  SetMetadata(context, {});
  return child_->RestoreBackup(context, request);
}

StatusOr<google::cloud::sql::v1::Operation>
SqlInstancesServiceMetadata::RotateServerCa(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesRotateServerCaRequest const& request) {
  SetMetadata(context, {});
  return child_->RotateServerCa(context, request);
}

StatusOr<google::cloud::sql::v1::Operation>
SqlInstancesServiceMetadata::StartReplica(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesStartReplicaRequest const& request) {
  SetMetadata(context, {});
  return child_->StartReplica(context, request);
}

StatusOr<google::cloud::sql::v1::Operation>
SqlInstancesServiceMetadata::StopReplica(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesStopReplicaRequest const& request) {
  SetMetadata(context, {});
  return child_->StopReplica(context, request);
}

StatusOr<google::cloud::sql::v1::Operation>
SqlInstancesServiceMetadata::TruncateLog(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesTruncateLogRequest const& request) {
  SetMetadata(context, {});
  return child_->TruncateLog(context, request);
}

StatusOr<google::cloud::sql::v1::Operation> SqlInstancesServiceMetadata::Update(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesUpdateRequest const& request) {
  SetMetadata(context, {});
  return child_->Update(context, request);
}

StatusOr<google::cloud::sql::v1::SslCert>
SqlInstancesServiceMetadata::CreateEphemeral(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesCreateEphemeralCertRequest const&
        request) {
  SetMetadata(context, {});
  return child_->CreateEphemeral(context, request);
}

StatusOr<google::cloud::sql::v1::Operation>
SqlInstancesServiceMetadata::RescheduleMaintenance(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesRescheduleMaintenanceRequest const&
        request) {
  SetMetadata(context, {});
  return child_->RescheduleMaintenance(context, request);
}

StatusOr<google::cloud::sql::v1::SqlInstancesVerifyExternalSyncSettingsResponse>
SqlInstancesServiceMetadata::VerifyExternalSyncSettings(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesVerifyExternalSyncSettingsRequest const&
        request) {
  SetMetadata(context, {});
  return child_->VerifyExternalSyncSettings(context, request);
}

StatusOr<google::cloud::sql::v1::Operation>
SqlInstancesServiceMetadata::StartExternalSync(
    grpc::ClientContext& context,
    google::cloud::sql::v1::SqlInstancesStartExternalSyncRequest const&
        request) {
  SetMetadata(context, {});
  return child_->StartExternalSync(context, request);
}

void SqlInstancesServiceMetadata::SetMetadata(
    grpc::ClientContext& context, std::string const& request_params) {
  context.AddMetadata("x-goog-request-params", request_params);
  SetMetadata(context);
}

void SqlInstancesServiceMetadata::SetMetadata(grpc::ClientContext& context) {
  context.AddMetadata("x-goog-api-client", api_client_header_);
  auto const& options = internal::CurrentOptions();
  if (options.has<UserProjectOption>()) {
    context.AddMetadata("x-goog-user-project",
                        options.get<UserProjectOption>());
  }
  auto const& authority = options.get<AuthorityOption>();
  if (!authority.empty()) context.set_authority(authority);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace sqladmin_internal
}  // namespace cloud
}  // namespace google
