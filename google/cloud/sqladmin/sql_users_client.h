// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/sql/v1/cloud_sql_users.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_SQLADMIN_SQL_USERS_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_SQLADMIN_SQL_USERS_CLIENT_H

#include "google/cloud/sqladmin/sql_users_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <memory>

namespace google {
namespace cloud {
namespace sqladmin {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Cloud SQL users service.
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class SqlUsersServiceClient {
 public:
  explicit SqlUsersServiceClient(
      std::shared_ptr<SqlUsersServiceConnection> connection, Options opts = {});
  ~SqlUsersServiceClient();

  //@{
  // @name Copy and move support
  SqlUsersServiceClient(SqlUsersServiceClient const&) = default;
  SqlUsersServiceClient& operator=(SqlUsersServiceClient const&) = default;
  SqlUsersServiceClient(SqlUsersServiceClient&&) = default;
  SqlUsersServiceClient& operator=(SqlUsersServiceClient&&) = default;
  //@}

  //@{
  // @name Equality
  friend bool operator==(SqlUsersServiceClient const& a,
                         SqlUsersServiceClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(SqlUsersServiceClient const& a,
                         SqlUsersServiceClient const& b) {
    return !(a == b);
  }
  //@}

  ///
  /// Deletes a user from a Cloud SQL instance.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::sql::v1::SqlUsersDeleteRequest,google/cloud/sql/v1/cloud_sql_users.proto#L72}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::sql::v1::Operation,google/cloud/sql/v1/cloud_sql_resources.proto#L628}
  ///
  /// [google.cloud.sql.v1.SqlUsersDeleteRequest]:
  /// @googleapis_reference_link{google/cloud/sql/v1/cloud_sql_users.proto#L72}
  /// [google.cloud.sql.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/sql/v1/cloud_sql_resources.proto#L628}
  ///
  StatusOr<google::cloud::sql::v1::Operation> Delete(
      google::cloud::sql::v1::SqlUsersDeleteRequest const& request,
      Options opts = {});

  ///
  /// Creates a new user in a Cloud SQL instance.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::sql::v1::SqlUsersInsertRequest,google/cloud/sql/v1/cloud_sql_users.proto#L86}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::sql::v1::Operation,google/cloud/sql/v1/cloud_sql_resources.proto#L628}
  ///
  /// [google.cloud.sql.v1.SqlUsersInsertRequest]:
  /// @googleapis_reference_link{google/cloud/sql/v1/cloud_sql_users.proto#L86}
  /// [google.cloud.sql.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/sql/v1/cloud_sql_resources.proto#L628}
  ///
  StatusOr<google::cloud::sql::v1::Operation> Insert(
      google::cloud::sql::v1::SqlUsersInsertRequest const& request,
      Options opts = {});

  ///
  /// Lists users in the specified Cloud SQL instance.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::sql::v1::SqlUsersListRequest,google/cloud/sql/v1/cloud_sql_users.proto#L96}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::sql::v1::UsersListResponse,google/cloud/sql/v1/cloud_sql_users.proto#L184}
  ///
  /// [google.cloud.sql.v1.SqlUsersListRequest]:
  /// @googleapis_reference_link{google/cloud/sql/v1/cloud_sql_users.proto#L96}
  /// [google.cloud.sql.v1.UsersListResponse]:
  /// @googleapis_reference_link{google/cloud/sql/v1/cloud_sql_users.proto#L184}
  ///
  StatusOr<google::cloud::sql::v1::UsersListResponse> List(
      google::cloud::sql::v1::SqlUsersListRequest const& request,
      Options opts = {});

  ///
  /// Updates an existing user in a Cloud SQL instance.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::sql::v1::SqlUsersUpdateRequest,google/cloud/sql/v1/cloud_sql_users.proto#L104}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::sql::v1::Operation,google/cloud/sql/v1/cloud_sql_resources.proto#L628}
  ///
  /// [google.cloud.sql.v1.SqlUsersUpdateRequest]:
  /// @googleapis_reference_link{google/cloud/sql/v1/cloud_sql_users.proto#L104}
  /// [google.cloud.sql.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/sql/v1/cloud_sql_resources.proto#L628}
  ///
  StatusOr<google::cloud::sql::v1::Operation> Update(
      google::cloud::sql::v1::SqlUsersUpdateRequest const& request,
      Options opts = {});

 private:
  std::shared_ptr<SqlUsersServiceConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace sqladmin
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_SQLADMIN_SQL_USERS_CLIENT_H
