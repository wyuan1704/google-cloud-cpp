// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/sql/v1/cloud_sql_databases.proto

#include "google/cloud/sqladmin/internal/sql_databases_stub.h"
#include "google/cloud/grpc_error_delegate.h"
#include "google/cloud/status_or.h"
#include <google/cloud/sql/v1/cloud_sql_databases.grpc.pb.h>
#include <memory>

namespace google {
namespace cloud {
namespace sqladmin_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

SqlDatabasesServiceStub::~SqlDatabasesServiceStub() = default;

StatusOr<google::cloud::sql::v1::Operation>
DefaultSqlDatabasesServiceStub::Delete(
    grpc::ClientContext& client_context,
    google::cloud::sql::v1::SqlDatabasesDeleteRequest const& request) {
  google::cloud::sql::v1::Operation response;
  auto status = grpc_stub_->Delete(&client_context, request, &response);
  if (!status.ok()) {
    return google::cloud::MakeStatusFromRpcError(status);
  }
  return response;
}

StatusOr<google::cloud::sql::v1::Database> DefaultSqlDatabasesServiceStub::Get(
    grpc::ClientContext& client_context,
    google::cloud::sql::v1::SqlDatabasesGetRequest const& request) {
  google::cloud::sql::v1::Database response;
  auto status = grpc_stub_->Get(&client_context, request, &response);
  if (!status.ok()) {
    return google::cloud::MakeStatusFromRpcError(status);
  }
  return response;
}

StatusOr<google::cloud::sql::v1::Operation>
DefaultSqlDatabasesServiceStub::Insert(
    grpc::ClientContext& client_context,
    google::cloud::sql::v1::SqlDatabasesInsertRequest const& request) {
  google::cloud::sql::v1::Operation response;
  auto status = grpc_stub_->Insert(&client_context, request, &response);
  if (!status.ok()) {
    return google::cloud::MakeStatusFromRpcError(status);
  }
  return response;
}

StatusOr<google::cloud::sql::v1::DatabasesListResponse>
DefaultSqlDatabasesServiceStub::List(
    grpc::ClientContext& client_context,
    google::cloud::sql::v1::SqlDatabasesListRequest const& request) {
  google::cloud::sql::v1::DatabasesListResponse response;
  auto status = grpc_stub_->List(&client_context, request, &response);
  if (!status.ok()) {
    return google::cloud::MakeStatusFromRpcError(status);
  }
  return response;
}

StatusOr<google::cloud::sql::v1::Operation>
DefaultSqlDatabasesServiceStub::Patch(
    grpc::ClientContext& client_context,
    google::cloud::sql::v1::SqlDatabasesUpdateRequest const& request) {
  google::cloud::sql::v1::Operation response;
  auto status = grpc_stub_->Patch(&client_context, request, &response);
  if (!status.ok()) {
    return google::cloud::MakeStatusFromRpcError(status);
  }
  return response;
}

StatusOr<google::cloud::sql::v1::Operation>
DefaultSqlDatabasesServiceStub::Update(
    grpc::ClientContext& client_context,
    google::cloud::sql::v1::SqlDatabasesUpdateRequest const& request) {
  google::cloud::sql::v1::Operation response;
  auto status = grpc_stub_->Update(&client_context, request, &response);
  if (!status.ok()) {
    return google::cloud::MakeStatusFromRpcError(status);
  }
  return response;
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace sqladmin_internal
}  // namespace cloud
}  // namespace google
