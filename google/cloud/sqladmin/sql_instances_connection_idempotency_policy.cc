// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/sql/v1/cloud_sql_instances.proto

#include "google/cloud/sqladmin/sql_instances_connection_idempotency_policy.h"
#include "absl/memory/memory.h"
#include <memory>

namespace google {
namespace cloud {
namespace sqladmin {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

using ::google::cloud::Idempotency;

SqlInstancesServiceConnectionIdempotencyPolicy::
    ~SqlInstancesServiceConnectionIdempotencyPolicy() = default;

namespace {
class DefaultSqlInstancesServiceConnectionIdempotencyPolicy
    : public SqlInstancesServiceConnectionIdempotencyPolicy {
 public:
  ~DefaultSqlInstancesServiceConnectionIdempotencyPolicy() override = default;

  /// Create a new copy of this object.
  std::unique_ptr<SqlInstancesServiceConnectionIdempotencyPolicy> clone()
      const override {
    return absl::make_unique<
        DefaultSqlInstancesServiceConnectionIdempotencyPolicy>(*this);
  }

  Idempotency AddServerCa(
      google::cloud::sql::v1::SqlInstancesAddServerCaRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency Clone(
      google::cloud::sql::v1::SqlInstancesCloneRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency Delete(
      google::cloud::sql::v1::SqlInstancesDeleteRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency DemoteMaster(
      google::cloud::sql::v1::SqlInstancesDemoteMasterRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency Export(
      google::cloud::sql::v1::SqlInstancesExportRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency Failover(
      google::cloud::sql::v1::SqlInstancesFailoverRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency Get(
      google::cloud::sql::v1::SqlInstancesGetRequest const&) override {
    return Idempotency::kIdempotent;
  }

  Idempotency Import(
      google::cloud::sql::v1::SqlInstancesImportRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency Insert(
      google::cloud::sql::v1::SqlInstancesInsertRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency List(
      google::cloud::sql::v1::SqlInstancesListRequest const&) override {
    return Idempotency::kIdempotent;
  }

  Idempotency ListServerCas(
      google::cloud::sql::v1::SqlInstancesListServerCasRequest const&)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency Patch(
      google::cloud::sql::v1::SqlInstancesPatchRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency PromoteReplica(
      google::cloud::sql::v1::SqlInstancesPromoteReplicaRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency ResetSslConfig(
      google::cloud::sql::v1::SqlInstancesResetSslConfigRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency Restart(
      google::cloud::sql::v1::SqlInstancesRestartRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency RestoreBackup(
      google::cloud::sql::v1::SqlInstancesRestoreBackupRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency RotateServerCa(
      google::cloud::sql::v1::SqlInstancesRotateServerCaRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency StartReplica(
      google::cloud::sql::v1::SqlInstancesStartReplicaRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency StopReplica(
      google::cloud::sql::v1::SqlInstancesStopReplicaRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency TruncateLog(
      google::cloud::sql::v1::SqlInstancesTruncateLogRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency Update(
      google::cloud::sql::v1::SqlInstancesUpdateRequest const&) override {
    return Idempotency::kIdempotent;
  }

  Idempotency CreateEphemeral(
      google::cloud::sql::v1::SqlInstancesCreateEphemeralCertRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency RescheduleMaintenance(
      google::cloud::sql::v1::SqlInstancesRescheduleMaintenanceRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency VerifyExternalSyncSettings(
      google::cloud::sql::v1::
          SqlInstancesVerifyExternalSyncSettingsRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency StartExternalSync(
      google::cloud::sql::v1::SqlInstancesStartExternalSyncRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }
};
}  // namespace

std::unique_ptr<SqlInstancesServiceConnectionIdempotencyPolicy>
MakeDefaultSqlInstancesServiceConnectionIdempotencyPolicy() {
  return absl::make_unique<
      DefaultSqlInstancesServiceConnectionIdempotencyPolicy>();
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace sqladmin
}  // namespace cloud
}  // namespace google
